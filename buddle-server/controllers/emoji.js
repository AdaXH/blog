const SinaCloud=require("scs-sdk"),Emoji=require("./../dbmodel/Emoji"),s3=new SinaCloud.S3,routerExports={},BUCKET_NAME="emoji";function saveImg2Bucket(e,t,o){const s=Buffer.from(t.replace(/^data:image\/\w+;base64,/,""),"base64"),r=`${e}.${o}`.toLowerCase();return new Promise((t,o)=>{s3.putObject({ACL:"public-read",Bucket:"ada.bucket",Key:`${BUCKET_NAME}/${r}`,Body:s},function(e){e?o(e):t(`http://sinacloud.net/ada.bucket/${BUCKET_NAME}/${r}`)})})}routerExports.updateEmoji={method:"post",url:"/updateEmoji",route:async t=>{const{body:{_id:o,code:s,dataUrl:r,fileType:c,isDel:a=!1}}=t.request;try{if(a)return void s3.deleteObject({Bucket:"ada.bucket",Key:`${BUCKET_NAME}/${s}.${c}`},async function(e){if(e)throw e;await Emoji.deleteOne({_id:o}).then(e=>{t.body={cussess:!0}})});let e="";if(o){const u={code:s};r&&(u.src=await saveImg2Bucket(s,r,c)),await Emoji.updateOne({_id:o},{$set:{...u}}),t.body={success:!0,src:e}}else e=await saveImg2Bucket(s,r,c),new Emoji({code:s,src:e}).save(),t.body={success:!0}}catch(e){console.log("error",e),t.body={success:!1,errorMsg:e}}}},routerExports.getEmojis={method:"get",url:"/getEmojis",route:async t=>{try{var e=await Emoji.find()||[];t.body={success:!0,emojis:e}}catch(e){t.body={success:!1,errorMsg:e}}}},module.exports=routerExports;